import {
  Avatar,
  Box,
  Button,
  Card,
  CardBody,
  CardFooter,
  CardHeader,
  Flex,
  FormControl,
  FormHelperText,
  FormLabel,
  HStack,
  Heading,
  Icon,
  Image,
  Input,
  Modal,
  ModalBody,
  ModalCloseButton,
  ModalContent,
  ModalFooter,
  ModalHeader,
  ModalOverlay,
  Select,
  SimpleGrid,
  Text,
  Textarea,
  VStack,
  useColorMode,
  useDisclosure,
  useToast,
} from "@chakra-ui/react";
import {
  FaPencilAlt,
  FaPlus,
  FaRegStar,
  FaStar,
  FaStarHalf,
  FaTrash,
} from "react-icons/fa";
import { useEffect, useState } from "react";

import Head from "next/head";
import { Inter } from "@next/font/google";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

export default function Register() {
  const [reviews, setReviews] = useState([
    {
      id: 1,
      name: "John Doe",
      rating: 4,
      review:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc vel tincidunt lacinia, nunc nisl aliquam mauris, eget aliquam nisl nisl eu nunc. Sed euismod, nunc vel tincidunt lacinia, nunc nisl aliquam mauris, eget aliquam nisl nisl eu nunc.",
    },
    {
      id: 2,
      name: "Jane Doe",
      rating: 5,
      review:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc vel tincidunt lacinia, nunc nisl aliquam mauris, eget aliquam nisl nisl eu nunc. Sed euismod, nunc vel tincidunt lacinia, nunc nisl aliquam mauris, eget aliquam nisl nisl eu nunc.",
    },
  ]);
  const { isOpen, onOpen, onClose } = useDisclosure();
  const [product, setProduct] = useState({
    name: "Asam Laksa",
    price: 10,
    description:
      "Asam laksa is a spicy noodle soup dish that is popular in Malaysia, Singapore, and Indonesia. It is a staple food in the Peranakan cuisine of Southeast Asia.",
    image:
      "https://www.rotinrice.com/wp-content/uploads/2014/09/AsamLaksa-1.jpg",
  });

  const toast = useToast();

  const router = useRouter();
  const { id } = router.query;

  const { toggleColorMode } = useColorMode();

  return (
    <>
      <Head>
        <title>Products {id}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HStack padding={20} justifyContent={"center"} spacing={16}>
        <Box width={400} maxWidth={"50%"} alignSelf={"flex-start"}>
          <Image
            src={product.image}
            alt={product.name}
            borderRadius={10}
            boxShadow={"lg"}
          />
        </Box>
        <VStack
          width={400}
          maxWidth={"50%"}
          alignSelf={"flex-start"}
          spacing={3}
          justifyContent={"flex-start"}
        >
          <Box width={"100%"} alignSelf={"flex-start"}>
            <Heading fontWeight={400}>{product.name}</Heading>
          </Box>
          <HStack
            width={"100%"}
            alignSelf={"flex-start"}
            justifyContent={"space-between"}
            alignItems={"center"}
            spacing={10}
          >
            <Box>
              <Text fontWeight={800} fontSize={"xl"}>
                RM {product.price}
              </Text>
            </Box>
            {/* stars rating */}
            <HStack spacing={1} justifyContent={"flex-end"}>
              <Icon
                as={FaStar}
                color={"yellow.400"}
                boxSize={6}
                alignSelf={"center"}
              />
              <Icon
                as={FaStar}
                color={"yellow.400"}
                boxSize={6}
                alignSelf={"center"}
              />
              <Icon
                as={FaStar}
                color={"yellow.400"}
                boxSize={6}
                alignSelf={"center"}
              />
              <Icon
                as={FaStar}
                color={"yellow.400"}
                boxSize={6}
                alignSelf={"center"}
              />
              <Icon
                as={FaStarHalf}
                color={"yellow.400"}
                boxSize={6}
                alignSelf={"center"}
              />
            </HStack>
          </HStack>
          <Text>{product.description}</Text>
          <HStack
            width={"100%"}
            justifyContent={"space-between"}
            mt={10}
            alignItems={"center"}
          >
            <Heading alignSelf={"flex-start"} size="md" fontWeight={300}>
              Reviews
            </Heading>
            <Button
              leftIcon={<Icon as={FaPlus} />}
              colorScheme={"blue"}
              onClick={onOpen}
            >
              Add Review
            </Button>
          </HStack>
          <VStack spacing={5}>
            {reviews.map((review) => (
              <VStack
                key={review.name}
                width={"100%"}
                spacing={4}
                alignItems={"flex-start"}
                boxShadow={"lg"}
                borderRadius={10}
                padding={6}
              >
                <HStack width={"100%"} justifyContent={"space-between"}>
                  <HStack spacing={2}>
                    <Avatar size={"sm"} name={"Dan Abrahmov"} />
                    <Text fontWeight={600}>{review.name}</Text>
                  </HStack>
                  <HStack spacing={1} justifyContent={"flex-end"}>
                    {review.rating === 1 ? (
                      <Icon
                        as={FaStar}
                        color={"yellow.400"}
                        boxSize={6}
                        alignSelf={"center"}
                      />
                    ) : review.rating === 2 ? (
                      <>
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                      </>
                    ) : review.rating === 3 ? (
                      <>
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                      </>
                    ) : review.rating === 4 ? (
                      <>
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                      </>
                    ) : review.rating === 5 ? (
                      <>
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                        <Icon
                          as={FaStar}
                          color={"yellow.400"}
                          boxSize={6}
                          alignSelf={"center"}
                        />
                      </>
                    ) : null}
                  </HStack>
                </HStack>
                <Text>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed
                  malesuada, nunc vel tincidunt lacinia, nunc nisl aliquam nisl,
                  vel aliquam nisl nunc vel lorem. Sed euismod, nunc vel
                  tincidunt lacinia, nunc nisl aliquam nisl, vel aliquam nisl
                  nunc vel lorem.
                </Text>
              </VStack>
            ))}
          </VStack>
        </VStack>
      </HStack>
      <Modal isOpen={isOpen} onClose={onClose}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Create New Product</ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            <VStack width={400} spacing={4} maxWidth={"100%"}>
              <FormControl>
                <FormLabel>Your Name</FormLabel>
                <Input
                  type="name"
                  onChange={(e) => setProductName(e.target.value)}
                />
                <FormHelperText>We'll never share your name.</FormHelperText>
              </FormControl>{" "}
              <FormControl>
                <FormLabel>Description</FormLabel>
                <Textarea
                  name="description"
                  placeholder="Spicy..."
                  onChange={(e) => setProductDescription(e.target.value)}
                />
              </FormControl>{" "}
              <FormControl>
                <FormLabel>Price (number only)</FormLabel>
                <Input
                  type="number"
                  onChange={(e) => setProductPrice(e.target.value)}
                />
              </FormControl>{" "}
            </VStack>
          </ModalBody>
          <ModalFooter
            display={"flex"}
            justifyContent={"space-between"}
            flexDirection={"row"}
          >
            <Button
              mr={3}
              onClick={() => {
                onClose();
              }}
              alignSelf={"flex-end"}
            >
              Cancel
            </Button>
            <Button
              colorScheme="green"
              mr={3}
              onClick={() => {
                onClose();
                createProduct(
                  productName,
                  productPrice,
                  productDescription,
                  productImage
                );
                toast({
                  title: "Product created.",
                  description: "We've created your product for you.",
                  status: "success",
                  duration: 9000,
                  isClosable: true,
                });
              }}
              alignSelf={"flex-end"}
            >
              Create
            </Button>
          </ModalFooter>
        </ModalContent>
      </Modal>
    </>
  );
}
